name: '.NET Core CI/CD Template'

on:
  workflow_call:
    secrets:
      ACR_PASSWORD:
        required: true
    inputs:
      environment:
        required: true
        type: string

jobs:
  build:
    name: 'Application Build'
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '2.2.x'

      - name: Restore dependencies
        run: dotnet restore aspnet-core-dotnet-core.sln

      - name: Build the project
        run: dotnet build aspnet-core-dotnet-core.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test aspnet-core-dotnet-core.sln --configuration Release --no-build --verbosity normal
        
      - name: Publish the project
        run: dotnet publish aspnet-core-dotnet-core/aspnet-core-dotnet-core.csproj --configuration Release --output ./publish

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ACR_NAME }}.azurecr.io
          username: ${{ vars.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ vars.ACR_NAME }}.azurecr.io/netapp:${{ github.sha }} .
          docker push ${{ vars.ACR_NAME }}.azurecr.io/netapp:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: [build]
  
    steps:
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Update Azure Container App with new image
        uses: azure/container-apps-deploy-action@v2
        with:
          imageToDeploy: "${{ vars.ACR_NAME }}.azurecr.io/netapp:${{ github.sha }}"
          containerAppName: netapplication
          resourceGroup: ${{ vars.RESOURCE_GROUP }}
